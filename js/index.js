/* Основи JAva Script*/
/* Запитай ім’я користувача та виведи у відповідь “Привіт, *ім’я*”;*/
// const userName = prompt('Напишіть ваше ім\'я:');
// console.log(`Привіт ${userName}`);

/* Запитай рік народження користувача, порахуй його/її вік і виведи результат. Поточний рік вкажи в коді як константу;*/
// const Year = 2022;
// let userAge = prompt(`Вкажіть ваш рік народження:`);
// console.log(Year-userAge);

/* Запитай у користувача довжину сторони квадрату і виведи периметр цього квадрата*/
// const answerTheQuestion = prompt(`Вкажіть в см довжину сторони квадрата, а ми порахуємо вам периметр`);
// console.log(4*answerTheQuestion);

/* Запитай у користувача радіус кола і виведи площу такої окружності.*/
// const radius = prompt(`Вкажіть радіус кола`);
// console.log(3.14 * Math.pow(radius,2));

/* Запитай у користувача відстань в кілометрах між двома містами і за скільки годин він хоче дістатися. Порахуй швидкість, з якою необхідно рухатися, щоб встигнути вчасно.*/
// const distance = prompt('Вкажіть відстань між містами а і б в км:');
// const time = prompt('За скільки годин ви хочете добратись?');
// console.log(distance / time);

/* Реалізуй конвертор валют. Користувач вводить долари, програма переводить їх в євро. Курс валют зберігається в константі.*/
// const moneyDollar = prompt('Введіть певну суму в $:');
// const moneyEuro = 0.93;
// console.log(moneyDollar * 0.93);
// ========================================================

/*Типи даних та оператори
 Виконай додавання 0,1 і 0,2 добийся математично правильної відповіді.*/
// console.log((0.1 + 0.2).toFixed(1));

/* Виконай додавання рядка "1" і цифри 2 (обидві операнди повинні бути в змінних), добийся математично правильної відповіді.*/
// const x = '1';
// const y = 2;
// console.log(!!x + y);

/* Користувач вказує обсяг флешки в Гб. Програма повинна порахувати скільки файлів розміром в 820 Мб поміщається на флешку.*/
// const flashMemory = prompt('обсяг памяті вашої флешки в Гб:');
// console.log(Math.floor(flashMemory / 0.82));

/* Користувач вводить суму грошей в гаманці і ціну однієї шоколадки. Програма виводить скільки шоколадок може купити користувач і скільки здачі у нього залишиться.*/
// const money = prompt('сума грошей в гаманці');
// const price = prompt('ціна однієї шоколадки');
// console.log(Math.floor(money / price));
// console.log((money % price).toFixed());

/* Запитай у користувача тризначне число і виведи його задом наперед. Для вирішення завдання тобі знадобиться оператор% (залишок від ділення)*/
// const chislo = prompt('вкажіть тризначне число');
// alert(split('').reverse().join(''));

/* Користувач вводить суму вкладу в банк на 2 місяці, з процентною ставкою депозиту 5% річних. Вивести суму нарахованих відсотків.*/
// const moneyBank = prompt('ввeсти суму вкладу в банк на 2 місяці');
// console.log((Math.floor((moneyBank * 0.05) / 12)) * 2);

// Що повернуть вираження:
//  2 && 0 && 3   якщо всі значення виконюються як true то вернеться true
//
//  2 || 0 || 3
//
// 2 && 0 || 3
// ===================================================

// обєкти
// / *Мінімум
// Створи об'єкт, що описує автомобіль (виробник, модель, рік випуску, середня швидкість, обсяг паливного бака, середня витрата палива на 100 км., водії), і наступні функції для роботи з цим об'єктом:
// Висновок на екран з інформацією про автомобіль.
// Додавання водія, який має право керувати автомобілем.
// Заправка автомобіля.
//  Підрахунок необхідного часу для подолання переданої відстані з середньою швидкістю. Враховуй, що через кожні 4 години дороги водієві необхідно робити перерву на 1 годину, а також потрібно перевіряти чи має право водій керувати даним автомобілем (ім'я водія функція приймає другим аргументом). Також потрібно перевірити чи вистачить палива, для здійснення цієї поїздки, якщо палива не вистачить потрібно вивести повідомлення, про це і запропонувати заправити автомобіль.*\
// const car = {
//   produce: "Renault",
//   model: "scenic",
//   year: "2012",
//   speed: "100",
//   tank: "50",
//   driver: '',
//   fuelConsumption: "7",
//   setDriver: function (driverName) {
//     this.driver = driverName
//   },
//   setTank: function (tankValue) {
//     this.tank += tankValue
//   }
//
// };
// car.setDriver(prompt('Ім\'я'));
// console.log(car);
// setInterval(() => {
// car.tank -=1;
// console.log(car);
// }, 1000)

// Проверьте, что этот объект не пустой и что в нем есть ключ age.
// const user = {
//   name: "Iryna",
//   age: 30
// };
// console.log(user);
// let key = 'age';
// alert(user[key]);

// Получите из этого массива объект, где name == "Irya" и сохраните это в какой-либо переменной.
// let user = [
//   { name: "Olya", age: 30 },
//   { name: "Irya", age: 21 },
//   { name: "Anna", age: 19 },
// ];
// const userName = user[1];
// console.log(userName);

//
// Норма
//
// Створити об'єкт, що описує час (години, хвилини, секунди), і такі функції для роботи з цим об'єктом:
// Для виведення часу на екран.
// Зміни часу на передане кількість секунд.
// Зміни часу на передане кількість хвилин.
// Зміни часу на передане кількість годин.
// Врахуйте, що в останніх 3-х функціях, при зміні однієї частини часу, може змінитися і інша. Наприклад: якщо до часу «20:59:45» додати 30 секунд, то повинно вийти «21:00:15», а не «20:30:75». Також потрібно передбачити можливість того що користувач може передати 150 секунд, або 75 хвилин.
// const time = {
//   year: 2022,
//   month: 04,
//   day: 29,
//   minute: 40,
//   second: 40,
// };
// setInterval(() => {
// time.second +=1;
// if (time.second===60) {
//   time.minute +=1;
//   time.second===0;
// }
// // 
// // console.log(time)
// },1000 )

// ========================================================
/*Масиви */

// Мінімум
// Створи масив «Список покупок». Кожен елемент масиву є об'єктом, який містить назву продукту, кількість і куплений він чи ні, ціну за одиницю товару, сума. Написати кілька функцій для роботи з таким масивом:
// Виводити весь список на екран таким чином, щоб спочатку йшли продукти, що ще не придбані, а потім - ті, що вже придбали.
// Покупка продукту. Функція приймає назву продукту і відзначає його як придбаний.
// Створення списку (не) придбаних продуктів.
const productNew = [
  {prod: 'apple', price: 3, pieces: 5, bought: true, sum:15},
  {prod: 'water', price: 8,pieces: 2,bought: false, sum:16},
  {prod: 'bread', price: 5,pieces: 1,bought: true, sum:5},
  {prod: 'pineapple', price: 15,pieces: 3,bought: true, sum:45},
  {prod: 'cherry', price: 8,pieces: 11,bought: false, sum:88},
  {prod: 'oil', price: 10,pieces: 3,bought: true, sum:30}
]
productNew.sort(function(a,b){
  if (a.bought>b.bought){
    return 
  }
}

)



product.sort(function(a,b) {
return a.false-b.true ;

})
console.log(getProduct);

employees.sort(function(a, b){
  var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase()
  if (nameA < nameB) //сортируем строки по возрастанию
    return -1
  if (nameA > nameB)
    return 1
  return 0 // Никакой сортировки
  })

  function compare(a, b) {
    const productNew = [
      {prod: 'apple', price: 3, pieces: 5, bought: true, sum:15},
      {prod: 'water', price: 8,pieces: 2,bought: false, sum:16},
      {prod: 'bread', price: 5,pieces: 1,bought: true, sum:5},
      {prod: 'pineapple', price: 15,pieces: 3,bought: true, sum:45},
      {prod: 'cherry', price: 8,pieces: 11,bought: false, sum:88},
      {prod: 'oil', price: 10,pieces: 3,bought: true, sum:30}
    ]
    if (bought: false) {
      return -1;
    }
    if (a больше b по некоторому критерию сортировки) {
      return 1;
    }
    // a должно быть равным b
    return 0;
  }

// custom sorting an array of strings var names = ("Adam", "Jeffrey", "Fabiano", "Danil", "Ben"); function len_compare(a, b)( return a.length - b.length; ) // sort according to string length names.sort(len_compare); console.log(names);


// Норма
// Видалення продукту зі списку (видалення повинно проводитися шляхом створення нового масиву, в якому продукт, що ми шукаємо, буде відсутнім)
// Додавання покупки в список. Враховуй, що при додаванні покупки з уже існуючим в списку продуктом, необхідно збільшувати кількість в існуючій покупці, а не додавати нову. При цьому також повинна змінитися сума, наприклад, якщо ціна за одиницю 12, а кількості товарів стало 2, то сума буде 24.





// Максимум
// Підрахунок суми всіх продуктів (враховуючи кількість кожного) в списку.
// Підрахунок суми всіх (не) придбаних продуктів.
// Показання продуктів в залежності від суми, (від більшого до меншого / від меншого до більшого, в залежності від параметра функції, який вона приймає

// =================================================
/*Функції  */

// Мінімум
// Напиши всі можливі варіанти створення функцій.
// Створи функцію, яка буде виводити кількість переданих їй аргументів.
// function func(a1,t11,f1,y,d){
// }
// console.log(func.length);

// Напиши функцію, яка приймає 2 числа і повертає :
// -1, якщо перше число менше, ніж друге;
// 1 - якщо перше число більше, ніж друге;
// 0 - якщо числа рівні.
// const numberOne =prompt('напишіть число перше');
// const numberTwo = prompt('напишіть число друге');
// if (numberOne<numberTwo) {
//   alert('-1');
// } else if (numberOne>numberTwo) {
//   alert('1');
// } if (numberOne=numberTwo) {
//   alert('0');
// };

// Напиши функцію, яка обчислює факторіал переданого їй числа.
// const number =prompt('напишіть число');
// alert( factorial(number) );
// function factorial(n) {
//   return (n != 1) ? n * factorial(n - 1) : 1;


// Напиши функцію, яка приймає три окремі цифри і перетворює їх в одне число. Наприклад: цифри 1, 4, 9 перетворяться в число 149.
// function myString(num1, num2, num3) {
//   num1.toString()
//   num2.toString()
//   num3.toString()
// }
// console.log(1,4,9);
// console.log(typeof(1,4,9))


// Напиши функцію, яка приймає довжину і ширину прямокутника і обчислює його площу. Якщо в функцію передали 1 параметр, то вона обчислює площу квадрата.
// function calc(a, b) {
//   if (b) return (a*b)
//   return (a*a)
//   }
//   console.log(calc(5,6));
//   console.log(calc(5));

// Норма
// Напиши функцію, яка перевіряє, чи є передане їй число “досконалим числом”. Досконале число - це число, яке дорівнює сумі всіх своїх дільників.

// function is_perfect(number) {
//   var temp = 0;
//   for (var i = 1; i <= number / 2; i++) {
//     if (number % i === 0) {
//       temp += i;
//     }
//   }
//   if (temp === number && temp !== 0) {
//     console.log("It is a perfect number.");
//   } else {
//     console.log("It is not a perfect number.");
//   }
// }
//
// function isPerfect(number) {
//   const a = number;
//   for (var i = a; i <= a / 2; ) {
//     if (a % i === 0) {
//       alert("It's a perfect number");
//     } else {
//       alert("It's not a perfect number");
//     }
//   }
// }
// console.log(isPerfect(prompt("Вкажіть число")));

// function getPerfect(a) {
//   let result = [];
//   for (let i = a; i < b; i++) {
//     sum = 0;
//     for (let n = 1; n <= i/2; n++) {
//       if (i % n === 0) sum += n;
//     }
//     if (i === sum) result.push(i);
//   }
//   return result;
// }
// console.log(getPerfect(1, 1000));

// Напиши функцію, яка приймає мінімальне і максимальне значення для діапазону, і виводить тільки ті числа з діапазону, які є досконалими. Використовуй написану раніше функцію, щоб дізнатися, чи є це число досконалим.----------------------------
//

// =========================================
/* Цикли */
/* Запитай у користувача його вік і визначи, ким він є: дитиною (0-11), підлітком (12-17), дорослим (18_59) або пенсіонером (60 ...), передбач можливість введення невірних даних. */
// const userAgeDifferent = prompt("Вкажіть ваш вік:");
// if (userAgeDifferent > 0 && userAgeDifferent <= 11) {
//   alert("дитина");
// } else if (userAgeDifferent >= 12 && userAgeDifferent <= 17) {
//   alert("підліток");
// } else if (userAgeDifferent >= 18 && userAgeDifferent <= 59) {
//   alert("дорослий");
// } else if (userAgeDifferent >= 60) {
//   alert("пенсіонер");
// } else {
//   alert("ти людина?");
// }

// Запитай у користувача число від 0 до 9 і виведи йому спецсимвол, який розташований на цій клавіші (1 !, 2 @, 3 # і т. д).
// const arrayOfSymbols = [")", "!", "@", "#", "$", "%", "^", "&", "*", "("];
// let numberAsk = prompt("Скажіть цифру від 0-9:");
// alert(arrayOfSymbols[numberAsk]);

// Підрахуй суму всіх чисел в заданому користувачем діапазоні.
// let start = Number(prompt('введіть початок діапазону'));
// let finish = Number(prompt('введіть кінець діапазону'));
//   let sum= 0;
//   while (start<= finish) {
//     sum+=start ;
//     start++ ;
//   }
//   alert(sum)------------------------

// Запитай у користувача 2 числа і знайди найбільший спільний дільник.
// let numberOneDivisor = prompt ('Вкажіть цифру');
// let numberTwoDivisor = prompt ('Вкажіть ще одну цифру');
// function divisor(x, y) {
//   if ((typeof numberOneDivisor !== 'number') || (typeof numberTwoDivisor !== 'number'))
//     return false;
//   numberOneDivisor = Math.abs(x);
//   numberTwoDivisor = Math.abs(y);
//   while(numberTwoDivisor) {
//     var t = numberTwoDivisor;
//     numberTwoDivisor = numberOneDivisor % numberTwoDivisor;
//     numberOneDivisor = t;
//   }
//   return numberOneDivisor;
// }
// alert(divisor)------------------------------

// Запитай у користувача число і виведи всі дільники цього числа.
// let numberOneAnswear = prompt("Вкажіть цифру");

// Запитай у користувача п’ятирозрядне число і визначи, чи є воно паліндромом.
// var a = +prompt("Введите пятизначное число", "");
// if (a > 9999 && a < 100000) {
//   b = a / 10000;
//   a = a % 10000;
//   c = a / 1000;
//   a = a % 1000;
//   a = a % 100;
//   e = a / 10;
//   a = a % 10;
//   if (b == a && c == e) {
//     alert("Это число палиндром");
//   } else {
//     alert("Это число не палиндром");
//   }
// } else {
//   alert("Вы ввели не пятизначное");
// }

// Запитай у користувача суму покупки і виведи суму до оплати зі знижкою:
// від 200 до 300 - знижка буде 3%;
// від 300 до 500 - 5%;
// від 500 і вище - 7%.

// Запитай у користувача 10 чисел і порахуй, скільки він ввів додатніх, від’ємних і нулів. При цьому також порахуй, скільки з них парних і непарних. Виведи статистику на екран. Враховуй, що достатньо однієї змінної (не 10) для введення чисел користувачем.
// Зацикли відображення днів тижня таким чином: «День тижня. Хочеш побачити наступний день? » і так до тих пір, поки користувач натискає OK.
// Максимум
//
// Гра «Вгадай число». Запропонуй користувачеві загадати число від 0 до 100 і відгадай його наступним способом: кожну ітерацію циклу діли діапазон чисел навпіл, записуй результат в N і питай у користувача «Ваше число> N, <N або == N?». Залежно від того що вказав користувач, зменшуй діапазон. Початковий діапазон від 0 до 100, поділи навпіл і отримай 50. Якщо користувач вказав, що його число> 50, то зміни діапазон на від 50 до 100. І так до тих пір, поки користувач не вибере == N (буде корисним почитати про алгоритм: "бінарний пошук").
// Виведи таблицю множення для всіх чисел від 2 до 9. Кожне число необхідно помножити на числа від 1 до 10.
// Запитай дату (день, місяць, рік) і виведи наступну за нею дату. Враховуй можливість переходу на наступний місяць, рік, а також високосний рік.
//
// ==============================================

/*класи */
//  Завдання 1

// Реалізуй клас, що описує коло. У класі повинні бути такі компоненти:
//
// поле, що зберігає радіус кола;
// get-властивість, яке повертає радіус кола;
// set-властивість, що встановлює радіус кола;
// get-властивість, яке повертає діаметр кола;
// метод, що обчислює площу кола;
// метод, що обчислює довжину кола.
// Продемонструй роботу властивостей і методів.
//
//
//
// Завдання 2
//
// Реалізуй клас, що описує канцелярський маркер. У класі повинні бути такі компоненти:
//
// поле, яке зберігає колір маркера;
// поле, яке зберігає кількість чорнил у маркері (у відсотках);
// метод для вводу (приймає рядок і виводить текст відповідним кольором; текст виводиться до тих пір, поки в маркері є чорнило; один не пробільний символ — це 0,5% чорнил у маркері).
// Реалізуй клас, що описує маркер, який можна перезаправляти. Успадкуй цей клас від простого маркера і додай метод для заправки.
//
// Продемонструй роботу написаних методів.
//
//
// Завдання 3
//
// Реалізуй клас Employee, що описує працівника, і створи масив працівників банку.
//
// Реалізуй клас EmpTable для генерації HTML-коду таблиці зі списком працівників банку. Масив працівників необхідно передавати через конструктор, а отримувати HTML-код за допомогою методу getHtml ().
//
// Створи об'єкт класу EmpTable і виведи на екран результат роботи методу getHtml ()
